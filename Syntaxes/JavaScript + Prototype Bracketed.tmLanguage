<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>This is a wrapper for and adds nested bracket scopes to Prototype &amp; Script.aculo.us (JavaScript). It also allow for embedded ruby source. By Thomas Aylott</string>
	<key>fileTypes</key>
	<array>
		<string>js</string>
		<string>htc</string>
	</array>
	<key>firstLineMatch</key>
	<string>^(//|/*)\s*(?i:(js|javascript))</string>
	<key>foldingStartMarker</key>
	<string>(\{[^\}]*$|\([^\)]*$|^.*/\*(?!.*\*/).*$|&lt;%)</string>
	<key>foldingStopMarker</key>
	<string>(^[^\{]*\}|^\s*\)|^(?!.*/\*).*\*/|%&gt;)</string>
	<key>keyEquivalent</key>
	<string>^~J</string>
	<key>name</key>
	<string>Prototype &amp; Script.aculo.us (JavaScript) Bracketed</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>&lt;%=</string>
			<key>end</key>
			<string>%&gt;</string>
			<key>name</key>
			<string>meta.source.embedded.return-value</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&lt;%=)</string>
					<key>end</key>
					<string>(?=%&gt;)</string>
					<key>name</key>
					<string>source.ruby.rails.embedded.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.ruby.rails</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>&lt;%(?![=#])</string>
			<key>end</key>
			<string>%&gt;</string>
			<key>name</key>
			<string>meta.source.embedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=&lt;%)</string>
					<key>end</key>
					<string>(?=%&gt;)</string>
					<key>name</key>
					<string>source.ruby.rails.embedded.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.ruby.rails</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#conditional-compilation</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#round-brackets</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>string.quoted.single.brace.js</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>string.quoted.single.js</string>
			<key>end</key>
			<string>'</string>
			<key>swallow</key>
			<string>\\.</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.brace.js</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>string.quoted.double.js</string>
			<key>end</key>
			<string>"</string>
			<key>swallow</key>
			<string>\\.</string>
		</dict>
		<dict>
			<key>include</key>
			<string>source.js.prototype</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>conditional-compilation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*(?=@)</string>
					<key>end</key>
					<string>(?&lt;=@)\*/</string>
					<key>name</key>
					<string>comment.block.conditional.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>@(if|elif|else|end)</string>
					<key>name</key>
					<string>keyword.control.conditional.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>@(cc_on|set)</string>
					<key>name</key>
					<string>keyword.operator.conditional.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>@(_win32|_win16|_mac|_alpha|_x86|_mc680x0|_PowerPC|_jscript_build|_jscript_version|_jscript|_debug|_fast|[a-zA-Z]\w+)</string>
					<key>name</key>
					<string>variable.conditional.js</string>
				</dict>
			</array>
		</dict>
		<key>round-brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\{</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.curly.js.prototype</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.group.braces.curly</string>
					<key>end</key>
					<string>\}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.round.prototype.js</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.group.braces.round.js.prototype</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.square.prototype.js</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.group.braces.square.js.prototype</string>
					<key>end</key>
					<string>\]</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$base</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.js.prototype.bracketed</string>
	<key>uuid</key>
	<string>1FD22341-8BAA-4F89-8257-92CBDD7DE29D</string>
</dict>
</plist>
